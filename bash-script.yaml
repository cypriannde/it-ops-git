# Creating my first script:

  
  In order to interpret the file as an executable, you'll also have to add the shebang (#!) at the top of the script. In Unix-like systems, a text file with a shebang is interpreted as an executable file. You can confirm where the bash interpreter is located with (which bash).
   ! whish bash: --> /user/bin/bash
   / which $SHELL: also you run this command will display that you are in the bash shell.
  lets start scripting:
   ! echo "hi dad"
        >hi dad
  !nano hidad.sh --> here we start writing a script by running the command starting with nano so it passes the command for it to start running. As we all know nano is a text editor 
  #! = this two characters when combined is called the (shebang)
    #!/bin/bash = you run this shebang command to start writing your script.
 
 Now we take --> echo "hi dad":
   so runing this thats our first script we just created. so we need to save and quite it what do we do ? (ctr +x) and it will ask you if you wanna save that buffer ofcourse we are going to take (y) which means yes. once ypi hit the y button it will ask you if you want to save the under the file name you just created definately we will hit enter because you named it and wanted it that way. 

ls: now we run ls to know if we actually created that script and it will display thats exiting the script has been created.

 Now how do  i run my script ?: --> (bash hidad.sh). so when you run that you will see (hi dad) it will be the output.
  So if we want to get back into our file maybe we want to edit we type --> (nano hidad.sh,) and it will automatically takes you back into your bash script and thats maybe you want to add some notes in it.
   now we normally know how to get into our bash script edit save and quite in nano.
We got to note that a bash script is just command line commands 

# 2nd way of creating a bash script: (./hidad.sh), once you run this command the out put will be permission denied but why? because it does't have the  executable permission to run. so what do we do ?

 now if we run (ls) we will see what it list all the files and folders and what you will is that the script we just created has just the permission to (-rw-r--r--), it can only read, write, read and read nor rights to execute. meaning the user has rights to read and write does not have the rights to execute while groups can only (read), and others (read) only. now what happens we have to apply the (chmode) command so we can pass this script the rights to run and is the command --> (chmod +x hidad.sh). so note the (+X) is simply adding executable permissions to that file
    So now after we run this command the file has the rights to execute now.  Now i run (./hidad.sh) and it automatically runs now without any issues at all.
  